version: "3.4"
services:
  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/config/.env
      - ./backend/config/.db.env
    expose:
      - 8080
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8080
    volumes:
      - media:/app/media
      - static:/app/static
    depends_on:
      - postgres
    networks:
      - internal
  postgres:
    image: postgres:alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/config/.db.env
    networks:
      - internal
  nginx:
    image: nginx:alpine
    restart: always
    expose:
      - 82
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/dist
      - media:/media
      - static:/static
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.strawberryghost.middlewares=to-https@file"
      - "traefik.http.routers.strawberryghost.rule=Host(`strawberryghost.org`) || Host(`www.strawberryghost.org`) || Host(`api.strawberryghost.org`)"
      - "traefik.http.routers.strawberryghost.entrypoints=web"
      - "traefik.http.routers.strawberryghost-secure.rule=Host(`strawberryghost.org`) || Host(`www.strawberryghost.org`) || Host(`api.strawberryghost.org`)"
      - "traefik.http.routers.strawberryghost-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.strawberryghost-secure.tls=true"
      - "traefik.http.routers.strawberryghost-secure.entrypoints=web-secure"
    networks:
      - internal
      - traefikproxy

volumes:
  postgres_data:
  media:
  static:

networks:
  internal:
  traefikproxy:
    name: traefikproxy
    external: true